{"ast":null,"code":"import Cookies from 'js-cookie';\nimport qs from 'qs';\nconst BASEAPI = 'http://alunos.b7web.com.br:501';\n\nconst apiFetchPost = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n\n  return json;\n};\n\nconst apiFetchGet = async function (endpoint) {\n  let body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}`);\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n\n  return json;\n};\n\nconst apiFetchPut = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n\n  return json;\n};\n\nconst apiFetchFile = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.append('token', token);\n    }\n  }\n\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    body\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n\n  return json;\n};\n\nconst MBSApi = {\n  login: async (email, password) => {\n    const json = await apiFetchPost('/user/signin', {\n      email,\n      password\n    });\n    return json;\n  },\n  register: async (name, email, password, stateLoc) => {\n    const json = await apiFetchPost('/user/signup', {\n      name,\n      email,\n      password,\n      state: stateLoc\n    });\n    return json;\n  },\n  getStates: async () => {\n    const json = await apiFetchGet('/states');\n    return json.states;\n  },\n  getCategories: async () => {\n    const json = await apiFetchGet('/categories');\n    return json.categories;\n  },\n  getAds: async options => {\n    const json = await apiFetchGet('/ad/list', options);\n    return json;\n  },\n  getAd: async function (id) {\n    let other = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const json = await apiFetchGet('/ad/item', {\n      id,\n      other\n    });\n    return json;\n  },\n  addAd: async fData => {\n    const json = await apiFetchFile('/ad/add', fData);\n    return json;\n  },\n  getUser: async token => {\n    const json = await apiFetchGet('/user/me', token);\n    return json;\n  },\n  editUser: async (token, name, email, state, password) => {\n    const json = await apiFetchPut('/user/me', {\n      token,\n      name,\n      email,\n      password,\n      state\n    });\n    return json;\n  }\n};\nexport default (() => MBSApi);","map":{"version":3,"sources":["D:/ProgramaçãoB7Web/Projetos/olx-clone/frontend/src/helpers/MBSApi.js"],"names":["Cookies","qs","BASEAPI","apiFetchPost","endpoint","body","token","get","res","fetch","method","headers","JSON","stringify","json","notallowed","window","location","href","apiFetchGet","apiFetchPut","apiFetchFile","append","MBSApi","login","email","password","register","name","stateLoc","state","getStates","states","getCategories","categories","getAds","options","getAd","id","other","addAd","fData","getUser","editUser"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie';\r\nimport qs from 'qs';\r\n\r\nconst BASEAPI = 'http://alunos.b7web.com.br:501'\r\n\r\nconst apiFetchPost = async (endpoint, body) => {\r\n\r\n    if (!body.token) {\r\n        let token = Cookies.get('token');\r\n        if (token) {\r\n            body.token = token;\r\n        }\r\n    }\r\n    const res = await fetch(BASEAPI + endpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n    const json = await res.json();\r\n    if (json.notallowed) {\r\n        window.location.href = '/signin';\r\n        return;\r\n    }\r\n    return json;\r\n}\r\n\r\nconst apiFetchGet = async (endpoint, body = []) => {\r\n\r\n    if (!body.token) {\r\n        let token = Cookies.get('token');\r\n        if (token) {\r\n            body.token = token;\r\n        }\r\n    }\r\n    const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}`);\r\n    const json = await res.json();\r\n\r\n    if (json.notallowed) {\r\n        window.location.href = '/signin';\r\n        return;\r\n    }\r\n    return json;\r\n\r\n}\r\n\r\nconst apiFetchPut = async (endpoint, body) => {\r\n    if (!body.token) {\r\n        let token = Cookies.get('token');\r\n        if (token) {\r\n            body.token = token;\r\n        }\r\n    }\r\n\r\n    const res = await fetch(BASEAPI + endpoint, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    });\r\n\r\n    const json = await res.json();\r\n    if (json.notallowed) {\r\n        window.location.href = '/signin';\r\n        return;\r\n    }\r\n    return json;\r\n}\r\n\r\nconst apiFetchFile = async (endpoint, body) => {\r\n\r\n    if (!body.token) {\r\n        let token = Cookies.get('token');\r\n        if (token) {\r\n            body.append('token', token);\r\n        }\r\n    }\r\n\r\n    const res = await fetch(BASEAPI + endpoint, {\r\n        method: 'POST',\r\n        body\r\n    });\r\n\r\n    const json = await res.json();\r\n\r\n    if (json.notallowed) {\r\n        window.location.href = '/signin';\r\n        return;\r\n    }\r\n\r\n    return json;\r\n}\r\n\r\n\r\n\r\n\r\nconst MBSApi = {\r\n    login: async (email, password) => {\r\n        const json = await apiFetchPost(\r\n            '/user/signin',\r\n            { email, password }\r\n        );\r\n        return json;\r\n    },\r\n    register: async (name, email, password, stateLoc) => {\r\n        const json = await apiFetchPost(\r\n            '/user/signup',\r\n            { name, email, password, state: stateLoc }\r\n        );\r\n        return json;\r\n    },\r\n    getStates: async () => {\r\n        const json = await apiFetchGet(\r\n            '/states'\r\n        );\r\n        return json.states;\r\n    },\r\n    getCategories: async () => {\r\n        const json = await apiFetchGet(\r\n            '/categories'\r\n        );\r\n        return json.categories;\r\n    },\r\n    getAds: async (options) => {\r\n        const json = await apiFetchGet(\r\n            '/ad/list',\r\n            options\r\n        );\r\n        return json;\r\n    },\r\n    getAd: async (id, other = false) => {\r\n        const json = await apiFetchGet(\r\n            '/ad/item',\r\n            { id, other }\r\n        );\r\n        return json;\r\n    },\r\n    addAd: async (fData) => {\r\n        const json = await apiFetchFile(\r\n            '/ad/add',\r\n            fData\r\n        )\r\n        return json;\r\n    },\r\n    getUser: async (token) => {\r\n        const json = await apiFetchGet(\r\n            '/user/me',\r\n            token\r\n        )\r\n        return json;\r\n    },\r\n    editUser: async (token, name, email, state, password) => {\r\n        const json = await apiFetchPut(\r\n            '/user/me',\r\n            { token, name, email, password, state }\r\n        )\r\n        return json;\r\n    }\r\n\r\n}\r\n\r\nexport default () => MBSApi;"]},"metadata":{},"sourceType":"module"}